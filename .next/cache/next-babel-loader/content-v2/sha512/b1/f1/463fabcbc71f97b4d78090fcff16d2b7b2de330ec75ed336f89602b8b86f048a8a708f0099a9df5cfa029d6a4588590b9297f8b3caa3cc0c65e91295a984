{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dev/LearnReactJs/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"A First Meetup\",\n    address: \"somewhere on this planet\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://dixitparmar6113:F4vuFVsXLeBpYtpz@cluster0.cioy8sy.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://dixitparmar6113:F4vuFVsXLeBpYtpz@cluster0.cioy8sy.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const Selectedmeetup = await meetupsCollection.find({});\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        id: meetupId,\n        title: \"A First Meetup\",\n        address: \"somewhere on this planet\",\n        description: 'This is a first meetup'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/dev/LearnReactJs/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","Selectedmeetup","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAwB;AACpB,sBACE,QAAC,YAAD;AACA,IAAA,KAAK,EAAC,wHADN;AAEA,IAAA,KAAK,EAAC,gBAFN;AAGA,IAAA,OAAO,EAAC,0BAHR;AAIA,IAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQH;;AAED,OAAO,eAAeC,cAAf,GAA+B;AAElC,QAAMC,MAAM,GAAI,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,0GAApB,CAAtB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAC,KADN;AAEHC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAI;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAV;AAAR,KAAJ,CAAlB;AAFH,GAAP;AAMH;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAEzC,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAI,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,0GAApB,CAAtB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,CAA7B;AAEAN,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHW,IAAAA,KAAK,EAAC;AACFC,MAAAA,UAAU,EAAC;AACPC,QAAAA,KAAK,EAAC,wHADC;AAEPC,QAAAA,EAAE,EAACR,QAFI;AAGPS,QAAAA,KAAK,EAAC,gBAHC;AAIPC,QAAAA,OAAO,EAAC,0BAJD;AAKPC,QAAAA,WAAW,EAAC;AALL;AADT;AADH,GAAP;AAWH;AACD,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(){\n    return (\n      <MeetupDetail\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n      title=\"A First Meetup\"\n      address=\"somewhere on this planet\"\n      description='This is a first meetup'\n      />\n    )\n}\n\nexport async function getStaticPaths(){\n\n    const client =  await MongoClient.connect(\"mongodb+srv://dixitparmar6113:F4vuFVsXLeBpYtpz@cluster0.cioy8sy.mongodb.net/?retryWrites=true&w=majority\")\n    const db = client.db()\n\n    const meetupsCollection = db.collection('meetups')\n\n    const meetups = await meetupsCollection.find({},{_id:1}).toArray()\n\n    client.close()\n    return {\n        fallback:false,\n        paths:meetups.map(meetup =>({params:{meetupId:meetup._id.toString()}}))\n        \n       \n    }\n}\n\n\nexport async function getStaticProps(context){\n\n    const meetupId = context.params.meetupId\n    const client =  await MongoClient.connect(\"mongodb+srv://dixitparmar6113:F4vuFVsXLeBpYtpz@cluster0.cioy8sy.mongodb.net/?retryWrites=true&w=majority\")\n    const db = client.db()\n\n    const meetupsCollection = db.collection('meetups')\n\n    const Selectedmeetup = await meetupsCollection.find({})\n\n    client.close()\n    \n    return {\n        props:{\n            meetupData:{\n                image:\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n                id:meetupId,\n                title:\"A First Meetup\",\n                address:\"somewhere on this planet\",\n                description:'This is a first meetup'\n            }\n        }\n    }\n}\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}