{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dev/LearnReactJs/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/dev/LearnReactJs/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBACI;AAAA,2BACF,QAAC,YAAD;AACA,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEA,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGA,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA;AADE,mBADJ;AAUH;;KAXQN,a;;AA0DT,eAAeA,aAAf","sourcesContent":["import { MongoClient,ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props){\n    return (\n        <>\n      <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n      />\n      </>\n    )\n}\n\nexport async function getStaticPaths(){\n\n    const client =  await MongoClient.connect(\"mongodb+srv://dixitparmar6113:F4vuFVsXLeBpYtpz@cluster0.cioy8sy.mongodb.net/?retryWrites=true&w=majority\")\n    const db = client.db()\n\n    const meetupsCollection = db.collection('meetups')\n\n    const meetups = await meetupsCollection.find({},{_id:1}).toArray()\n\n    client.close()\n    return {\n        fallback:false,\n        paths:meetups.map(meetup =>({params:{meetupId:meetup._id.toString()}}))\n        \n       \n    }\n}\n\n\n// \n\nexport async function getStaticProps(context){\n\n    const meetupId = context.params.meetupId\n    const client =  await MongoClient.connect(\"mongodb+srv://dixitparmar6113:F4vuFVsXLeBpYtpz@cluster0.cioy8sy.mongodb.net/?retryWrites=true&w=majority\")\n    const db = client.db()\n\n    const meetupsCollection = db.collection('meetups')\n\n    const Selectedmeetup = await meetupsCollection.findOne({_id: new ObjectId(meetupId)})\n\n    client.close()\n    \n    return {\n        props:{\n            meetupData:{\n                id:Selectedmeetup._id.toString(),\n                title:Selectedmeetup.title,\n                address:Selectedmeetup.address,\n                image:Selectedmeetup.image,\n                description:Selectedmeetup.description\n            }\n        }\n    }\n}\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}